name: "[CI] anaconda-cloud-auth"

on:
  # pull_request:
  #   branches:
  #     - main
  #   paths:
  #   - .github/workflows/ci-anaconda-cloud-auth.yml
  #   - libs/anaconda-cloud-auth/**
  # push:
  #   branches:
  #     - main
  #   paths:
  #   - .github/workflows/ci-anaconda-cloud-auth.yml
  #   - libs/anaconda-cloud-auth/**
  #   tags:
  #   - anaconda-cloud-auth-v[0-9]+.[0-9]+.[0-9]+*
  merge_group:

defaults:
  run:
    working-directory: ./libs/anaconda-cloud-auth

jobs:
  test:
    name: Test, Python ${{ matrix.python-version }}
    runs-on:
      labels: self-hosted-default
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12" ]
    steps:
      - name: Checkout
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4
      - name: Setup Python
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install testing dependencies
        env:
          TOKEN: ${{ secrets.ANACONDA_ORG_DOWNLOAD_TOKEN }}
        run: |
          python -m pip config set global.extra-index-url "https://pypi.anaconda.org/t/$TOKEN/anaconda-cloud/label/dev/simple"
          python -m pip install tox tox-gh-actions
      - name: Test with tox
        env:
          TEST_API_KEY: ${{ secrets.TEST_API_KEY }}
          ANACONDA_CLOUD_DOMAIN: nucleus-latest.internal.anacondaconnect.com
          ANACONDA_CLOUD_CLIENT_ID: cloud-cli-test-4
        run: tox -- --integration
      - name: Report coverage
        id: coverage
        if: (!cancelled()) && (matrix.python-version == '3.10') && (matrix.os == 'ubuntu-latest')
        uses: MishaKav/pytest-coverage-comment@81882822c5b22af01f91bd3eacb1cefb6ad73dc2 # v1.1.53
        with:
          title: "Coverage Report: anaconda-cloud-auth, Python ${{ matrix.python-version }}, ${{ matrix.os }}"
          pytest-xml-coverage-path: libs/anaconda-cloud-auth/coverage.xml
          coverage-path-prefix: libs/anaconda-cloud-auth/
          unique-id-for-comment: anaconda-cloud-auth-${{ matrix.python-version }}-${{ matrix.os }}


  build-conda-package:
    name: Build conda package
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4
          with:
            fetch-depth: 0
        - name: Create build environment
          run: |
            source $CONDA/bin/activate
            conda create -n build --file ../../etc/build.linux-64.lock
        - name: conda build
          run: |
            source $CONDA/bin/activate && conda activate build
            VERSION=`hatch version` conda build -c t/${{ secrets.ANACONDA_ORG_DOWNLOAD_TOKEN }}/anaconda-cloud -c conda-forge -c defaults --override-channels conda.recipe
            mv $CONDA_PREFIX/conda-bld .
        - name: Upload the build artifact
          uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4
          with:
            name: anaconda-cloud-auth-conda-${{ github.sha }}
            path: libs/anaconda-cloud-auth/conda-bld
            if-no-files-found: error
            retention-days: 7

  build-wheel:
    name: Build the wheel
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5
        with:
          python-version: "3.10"
      - name: Install build dependencies
        run: pip install build
      - name: Build the package
        run: python -m build
      - name: Upload the build artifact
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4
        with:
          name: anaconda-cloud-auth-wheel-${{ github.sha }}
          path: libs/anaconda-cloud-auth/dist/*
          if-no-files-found: error
          retention-days: 7

  # This check job runs to ensure all tests and builds  have passed, such that we can use it as a "wildcard"
  # for branch protection to ensure all tests pass before a PR can be merged.
  check:
    name: Check all tests passed
    if: always()
    needs: [test, build-conda-package, build-wheel]
    runs-on: ubuntu-latest
    steps:
    - name: Decide whether all required jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}

  publish-conda-pkg-to-anaconda-dot-org:
    name: Publish conda package to Anaconda.org
    runs-on: ubuntu-latest
    if: github.event_name == 'push'  # Only run on push to main branch
    needs: [check]
    steps:
    - name: Retrieve the source code
      uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4
      with:
        fetch-depth: 0
    - name: Create build environment
      run: |
        source $CONDA/bin/activate
        conda create -n build --file ../../etc/build.linux-64.lock
    - name: Download the build artifacts
      uses: actions/download-artifact@9c19ed7fe5d278cd354c7dfd5d3b88589c7e2395 # v4
      with:
        name: anaconda-cloud-auth-conda-${{ github.sha }}
        path: ~/auth-conda-bld
    - name: publish
      env:
        TOKEN: ${{ secrets.ANACONDA_ORG_UPLOAD_TOKEN }}
      run: |
        source $CONDA/bin/activate && conda activate build
        [[ "$GITHUB_REF" =~ ^refs/tags/anaconda-cloud-auth-v ]] || export LABEL="--label dev"
        anaconda --verbose \
          --token $TOKEN \
          upload \
          --user anaconda-cloud \
          $LABEL \
          --force \
          --private \
          ~/auth-conda-bld/noarch/anaconda-cloud-auth-*

  publish-wheel-to-anaconda-dot-org:
    name: Publish wheel to Anaconda.org
    runs-on: ubuntu-latest
    if: github.event_name == 'push'  # Only run on push to main branch
    needs: [check]
    steps:
    - name: Retrieve the source code
      uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4
      with:
        fetch-depth: 0
    - name: Download the build artifacts
      uses: actions/download-artifact@9c19ed7fe5d278cd354c7dfd5d3b88589c7e2395 # v4
      with:
        name: anaconda-cloud-auth-wheel-${{ github.sha }}
        path: ~/dist
    - name: Upload to anaconda.org
      env:
        TOKEN: ${{ secrets.ANACONDA_ORG_UPLOAD_TOKEN }}
        GITHUB_REF: ${{ github.ref }}
      run: |
        source $CONDA/bin/activate
        conda install -y anaconda-client
        [[ "$GITHUB_REF" =~ ^refs/tags/anaconda-cloud-auth-v ]] || export LABEL="--label dev"
        anaconda --verbose \
          --token $TOKEN \
          upload \
          --user anaconda-cloud \
          ~/dist/*.whl \
          --summary \
          "A client auth library for Anaconda.cloud APIs" \
          $LABEL \
          --force \
          --private

  publish-to-pypi:
    name: Build & publish to PyPI
    if: startsWith(github.event.ref, 'refs/tags/anaconda-cloud-auth-v')
    runs-on: ubuntu-latest
    needs: [check]
    steps:
    - name: Checkout
      uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4
    - name: Setup Python
      uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5
    - name: Download the build artifacts
      uses: actions/download-artifact@9c19ed7fe5d278cd354c7dfd5d3b88589c7e2395 # v4
      with:
        name: anaconda-cloud-auth-wheel-${{ github.sha }}
        path: ~/dist
    - name: Install build dependencies
      run: pip install twine
    - name: Upload to PyPI with twine
      run: python -m twine upload ~/dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN_ANACONDA_CLOUD_AUTH }}
