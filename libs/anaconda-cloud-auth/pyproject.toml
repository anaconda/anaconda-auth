[build-system]
build-backend = "hatchling.build"
requires = ["hatchling", "hatch-vcs>=0.3", "setuptools-scm>=7.1"]

[project]
dependencies = [
  "keyring",
  "python-dotenv",
  "pydantic <2.0",
  "pyjwt",
  "requests",
  "cryptography>=3.4.0"  # see pyjwt
]
description = "A client auth library for Anaconda.cloud APIs"
dynamic = ["version"]
license = {text = "BSD-3-Clause"}
name = "anaconda-cloud-auth"
readme = "README.md"
requires-python = ">=3.8"

[project.entry-points."anaconda_cloud_cli.subcommand"]

[project.optional-dependencies]
cli = ["anaconda-cloud-cli"]
dev = [
  "mypy",
  "pytest",
  "tox",
  "types-requests"
]
publish = [
  "build",
  "twine",
  "wheel"
]

[tool.distutils.bdist_wheel]
universal = true

[tool.hatch.build.hooks.vcs]
version-file = "src/anaconda_cloud_auth/_version.py"

[tool.hatch.build.targets.sdist]
include = [
  "/src/anaconda_cloud_auth",
  "/.env.template",
  "/pyproject.toml",
  "/tests",
  "/Makefile",
  "/environment-dev.yml"
]

[tool.hatch.version]
source = "vcs"

[tool.hatch.version.raw-options]
git_describe_command = "git describe --dirty --tags --long --match 'anaconda-cloud-auth-*'"
root = "../.."

[tool.isort]
force_single_line = true
known_secondparty = ["anaconda_cloud_cli"]
profile = "black"
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "SECONDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.mypy]
disallow_untyped_defs = true
files = [
  "src/**/*.py",
  "tests/**/*.py"
]
python_version = "3.8"

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = "rich_click.*"

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = "anaconda_navigator.*"

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = "jaraco.classes.properties.*"

[tool.pytest.ini_options]
markers = [
  "integration: Integration tests requiring a browser"
]
norecursedirs = ["env", "envs", ".tox"]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py38,py39,py310,py311,mypy
isolated_build = True

[gh-actions]
python =
    3.8: py38, mypy
    3.9: py39, mypy
    3.10: py310, mypy
    3.11: py311

[testenv]
deps =
    mypy
    pytest
commands = pytest -m "not integration"

[testenv:mypy]
deps =
    mypy
    pytest
    types-requests
    typer
    rich
commands = mypy
"""

[tool.vendoring]
destination = "src/anaconda_cloud_auth/_vendor/"
namespace = "anaconda_cloud_auth._vendor"
protected-files = ["__init__.py", "requirements.txt"]
requirements = "src/anaconda_cloud_auth/_vendor/requirements.txt"

[tool.vendoring.license.directories]
setuptools = "pkg_resources"

[tool.vendoring.license.fallback-urls]
pkce = "https://github.com/RomeoDespres/pkce/raw/master/LICENSE"
